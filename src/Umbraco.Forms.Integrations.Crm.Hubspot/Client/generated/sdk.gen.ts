// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-fetch';
import type { GetContactsAuthConfiguredData, GetContactsAuthConfiguredResponse, GetContactsAuthUrlData, GetContactsAuthUrlResponse, PostContactsAuthorizeData, PostContactsAuthorizeResponse, PostContactsDeauthorizeData, PostContactsDeauthorizeResponse, GetContactsPropertiesData, GetContactsPropertiesResponse, GetFormsFieldsData, GetFormsFieldsResponse } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

export class ContactsService {
    public static getContactsAuthConfigured<ThrowOnError extends boolean = true>(options?: Options<GetContactsAuthConfiguredData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetContactsAuthConfiguredResponse, unknown, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/umbraco/hubspot/management/api/v1/contacts/auth/configured',
            ...options
        });
    }
    
    public static getContactsAuthUrl<ThrowOnError extends boolean = true>(options?: Options<GetContactsAuthUrlData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetContactsAuthUrlResponse, unknown, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/umbraco/hubspot/management/api/v1/contacts/auth/url',
            ...options
        });
    }
    
    public static postContactsAuthorize<ThrowOnError extends boolean = true>(options?: Options<PostContactsAuthorizeData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).post<PostContactsAuthorizeResponse, unknown, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/umbraco/hubspot/management/api/v1/contacts/authorize',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options?.headers
            }
        });
    }
    
    public static postContactsDeauthorize<ThrowOnError extends boolean = true>(options?: Options<PostContactsDeauthorizeData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).post<PostContactsDeauthorizeResponse, unknown, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/umbraco/hubspot/management/api/v1/contacts/deauthorize',
            ...options
        });
    }
    
    public static getContactsProperties<ThrowOnError extends boolean = true>(options?: Options<GetContactsPropertiesData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetContactsPropertiesResponse, unknown, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/umbraco/hubspot/management/api/v1/contacts/properties',
            ...options
        });
    }
    
}

export class FormsService {
    public static getFormsFields<ThrowOnError extends boolean = true>(options?: Options<GetFormsFieldsData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetFormsFieldsResponse, unknown, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/umbraco/hubspot/management/api/v1/forms/fields',
            ...options
        });
    }
    
}